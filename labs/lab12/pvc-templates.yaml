apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userX-app-data
  namespace: userX-namespace
  labels:
    app: pvc-template
    owner: userX
    purpose: application-data
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: gp3
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userX-logs-storage
  namespace: userX-namespace
  labels:
    app: pvc-template
    owner: userX
    purpose: log-storage
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: gp3-immediate
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userX-backup-storage
  namespace: userX-namespace
  labels:
    app: pvc-template
    owner: userX
    purpose: backup-storage
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-pvc-demo-app
  namespace: userX-namespace
  labels:
    app: pvc-demo
    owner: userX
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pvc-demo
      owner: userX
  template:
    metadata:
      labels:
        app: pvc-demo
        owner: userX
    spec:
      containers:
      - name: pvc-demo
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Starting PVC demo application for userX..."

          # Create test files in different volumes
          echo "Creating test data..."
          echo "$(date): Application data" > /data/app-data.txt
          echo "$(date): Log entry" > /logs/application.log
          echo "$(date): Backup data" > /backup/backup.txt

          # Show disk usage
          echo "Volume usage:"
          df -h /data /logs /backup

          # Keep running and periodically update files
          while true; do
            echo "$(date): Updating files..."
            echo "$(date): App update" >> /data/app-data.txt
            echo "$(date): Log update" >> /logs/application.log
            echo "$(date): Backup update" >> /backup/backup.txt

            echo "Current file sizes:"
            ls -lh /data/ /logs/ /backup/

            sleep 60
          done
        volumeMounts:
        - name: app-data-volume
          mountPath: /data
        - name: logs-volume
          mountPath: /logs
        - name: backup-volume
          mountPath: /backup
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: app-data-volume
        persistentVolumeClaim:
          claimName: userX-app-data
      - name: logs-volume
        persistentVolumeClaim:
          claimName: userX-logs-storage
      - name: backup-volume
        persistentVolumeClaim:
          claimName: userX-backup-storage
---
apiVersion: v1
kind: Service
metadata:
  name: userX-pvc-demo-service
  namespace: userX-namespace
  labels:
    app: pvc-demo
    owner: userX
spec:
  selector:
    app: pvc-demo
    owner: userX
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
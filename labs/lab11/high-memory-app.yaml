apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-high-memory-app
  namespace: userX-namespace
  labels:
    app: high-memory-app
    owner: userX
    workload-type: memory-intensive
spec:
  replicas: 1
  selector:
    matchLabels:
      app: high-memory-app
      owner: userX
  template:
    metadata:
      labels:
        app: high-memory-app
        owner: userX
        workload-type: memory-intensive
    spec:
      nodeSelector:
        node-type: training
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - m5.large
                - m5a.large
          - weight: 50
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: workload-type
                  operator: In
                  values:
                  - memory-intensive
              topologyKey: kubernetes.io/hostname
      containers:
      - name: memory-app
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Starting high-memory application for userX..."
          echo "Allocating memory..."

          # Allocate memory in chunks to simulate memory-intensive workload
          MEMORY_SIZE=256  # MB
          echo "Targeting ${MEMORY_SIZE}MB memory usage"

          # Create a large array in memory
          dd if=/dev/zero of=/tmp/memory_test bs=1M count=$MEMORY_SIZE 2>/dev/null &
          MEMORY_PID=$!

          echo "Memory allocated (PID: $MEMORY_PID)"
          echo "Current memory usage:"
          free -h

          # Keep the application running and periodically report memory usage
          while true; do
            echo "$(date): Memory status check..."
            free -h | grep Mem
            ps aux | grep -v grep | head -5
            sleep 60
          done
        env:
        - name: USER_PREFIX
          value: "userX"
        - name: WORKLOAD_TYPE
          value: "memory-intensive"
        - name: MEMORY_TARGET
          value: "256Mi"
        resources:
          requests:
            memory: "512Mi"  # Request more memory for proper scheduling
            cpu: "100m"
          limits:
            memory: "1Gi"    # Allow burst up to 1GB
            cpu: "200m"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "ps aux | grep -v grep | grep 'sleep 60' > /dev/null"
          initialDelaySeconds: 10
          periodSeconds: 30
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "ps aux | grep -v grep | grep 'sleep 60' > /dev/null"
          initialDelaySeconds: 30
          periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: userX-high-memory-service
  namespace: userX-namespace
  labels:
    app: high-memory-app
    owner: userX
spec:
  selector:
    app: high-memory-app
    owner: userX
  ports:
  - port: 8080
    targetPort: 8080
    name: metrics
  type: ClusterIP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: userX-memory-stress-test
  namespace: userX-namespace
  labels:
    app: memory-stress-test
    owner: userX
spec:
  template:
    metadata:
      labels:
        app: memory-stress-test
        owner: userX
        workload-type: memory-test
    spec:
      nodeSelector:
        node-type: training
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: workload-type
                  operator: In
                  values:
                  - memory-intensive
                  - memory-test
              topologyKey: kubernetes.io/hostname
      restartPolicy: Never
      containers:
      - name: memory-stress
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Starting memory stress test for userX..."

          # Progressive memory allocation test
          for size in 64 128 256 384; do
            echo "Testing ${size}MB allocation..."
            dd if=/dev/zero of=/tmp/stress_${size} bs=1M count=$size 2>/dev/null || {
              echo "Failed to allocate ${size}MB"
              break
            }
            echo "Successfully allocated ${size}MB"
            free -h | grep Mem
            sleep 10
          done

          echo "Memory stress test completed"
          echo "Final memory state:"
          free -h
          ls -lh /tmp/stress_*
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "100m"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-required-affinity-app
  namespace: userX-namespace
  labels:
    app: required-affinity
    owner: userX
spec:
  replicas: 3
  selector:
    matchLabels:
      app: required-affinity
      owner: userX
  template:
    metadata:
      labels:
        app: required-affinity
        owner: userX
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - m5.large
                - m5a.large
                - m4.large
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - required-affinity
            topologyKey: kubernetes.io/hostname
      containers:
      - name: affinity-app
        image: nginx:1.21
        ports:
        - containerPort: 80
        env:
        - name: AFFINITY_TYPE
          value: "required"
        - name: USER_PREFIX
          value: "userX"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: userX-required-affinity-service
  namespace: userX-namespace
  labels:
    app: required-affinity
    owner: userX
spec:
  selector:
    app: required-affinity
    owner: userX
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-database-required-affinity
  namespace: userX-namespace
  labels:
    app: database-required-affinity
    owner: userX
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database-required-affinity
      owner: userX
  template:
    metadata:
      labels:
        app: database-required-affinity
        owner: userX
        component: database
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - training
                - training-spot
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: NotIn
                values:
                - database
            topologyKey: kubernetes.io/hostname
      containers:
      - name: database
        image: postgres:13-alpine
        env:
        - name: POSTGRES_DB
          value: userX_testdb
        - name: POSTGRES_USER
          value: userX
        - name: POSTGRES_PASSWORD
          value: password123
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - userX
            - -d
            - userX_testdb
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - userX
            - -d
            - userX_testdb
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: postgres-storage
        emptyDir: {}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-broken-rbac-app
  namespace: userX-namespace
  labels:
    app: broken-rbac-app
    owner: userX
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broken-rbac-app
      owner: userX
  template:
    metadata:
      labels:
        app: broken-rbac-app
        owner: userX
    spec:
      serviceAccountName: userX-broken-sa
      containers:
      - name: broken-app
        image: bitnami/kubectl:latest
        command: ['sh', '-c']
        args:
        - |
          echo "Starting broken RBAC application..."
          echo "This app will fail due to insufficient permissions..."

          # These commands will fail due to missing permissions
          echo "Attempting to list nodes (should fail):"
          kubectl get nodes || echo "FAILED: Cannot list nodes"

          echo "Attempting to create deployments (should fail):"
          kubectl create deployment test --image=nginx || echo "FAILED: Cannot create deployments"

          echo "Attempting to delete pods (should fail):"
          kubectl delete pods --all || echo "FAILED: Cannot delete pods"

          echo "Attempting to list secrets (should fail):"
          kubectl get secrets || echo "FAILED: Cannot list secrets"

          # Keep container running for troubleshooting
          sleep 3600
        env:
        - name: APP_STATUS
          value: "broken-permissions"
        - name: USER_PREFIX
          value: "userX"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: userX-broken-sa
  namespace: userX-namespace
  labels:
    purpose: broken-rbac-demo
    owner: userX
---
# Intentionally broken role with no permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: userX-namespace
  name: userX-no-permissions
rules: []  # Empty rules - no permissions granted
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: userX-broken-binding
  namespace: userX-namespace
subjects:
- kind: ServiceAccount
  name: userX-broken-sa
  namespace: userX-namespace
roleRef:
  kind: Role
  name: userX-no-permissions
  apiGroup: rbac.authorization.k8s.io
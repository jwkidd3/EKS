apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: userX-cluster-viewer
rules:
- apiGroups: [""]
  resources: ["nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: userX-cluster-viewer-binding
subjects:
- kind: ServiceAccount
  name: userX-cluster-viewer
  namespace: userX-namespace
roleRef:
  kind: ClusterRole
  name: userX-cluster-viewer
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: userX-cluster-viewer
  namespace: userX-namespace
  labels:
    purpose: cluster-access
    owner: userX
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userX-cluster-viewer-app
  namespace: userX-namespace
  labels:
    app: cluster-viewer
    owner: userX
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-viewer
      owner: userX
  template:
    metadata:
      labels:
        app: cluster-viewer
        owner: userX
    spec:
      serviceAccountName: userX-cluster-viewer
      containers:
      - name: kubectl-container
        image: bitnami/kubectl:latest
        command: ['sleep', '3600']
        env:
        - name: CLUSTER_ROLE
          value: "viewer"
        - name: USER_PREFIX
          value: "userX"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"